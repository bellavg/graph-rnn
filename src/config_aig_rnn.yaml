# Config: GRU Node + RNN Edge (with Node Prediction)
data:
  dataset_type: 'aig-directed-multiclass'
  graph_files: # List of file paths
    - './aigs/real_aigs_part_1_of_6.pkl'
    - './aigs/real_aigs_part_2_of_6.pkl'
    - './aigs/real_aigs_part_3_of_6.pkl'
    - './aigs/real_aigs_part_4_of_6.pkl'
    # Add paths to all your generated .pkl files here
  use_bfs: false # Keep false for topological sort used by AIGDataset
  max_graphs: null # Use all graphs from the listed files
  m: 63
  num_node_types: 4
  max_node_count: 64
  max_level: 22
  train_split: 0.9 # Fraction for training
  max_train_graphs: null # Optional limit on number of training graphs

model:
  mode: 'directed-multiclass' # Or 'aig' if that's more appropriate
  # --- Removed flags now handled in train config or implicitly ---
  # use_lstm: false
  # use_attention: false
  # edge_model: 'rnn'
  # predict_node_types: false # Moved to train config

  GraphRNN:
    embedding_size: 384
    hidden_size: 768
    num_layers: 4
    # edge_feature_len: 3 # Now defaults to NUM_EDGE_FEATURES (3) in utils.py
    # output_size: 384    # Now set automatically in utils.py to match EdgeRNN hidden_size

  EdgeRNN:
    embedding_size: 192
    hidden_size: 768      # MUST match GraphRNN hidden_size (as output_size is set to this)
    num_layers: 4
    # edge_feature_len: 3 # Now defaults to NUM_EDGE_FEATURES (3) in utils.py

train:
  batch_size: 64
  lr: 0.001              # Initial Learning Rate
  steps: 75000            # Total training steps
  print_iter: 100
  checkpoint_iter: 7500
  checkpoint_dir: 'checkpoints/checkpoints_gru_rnn_node' # Specific directory for this run
  log_file: 'train_results/logs_gru_rnn_node.csv'      # Specific directory/file for this run
  eta_min: 0             # For CosineAnnealingLR

  # --- ADDED Node Prediction Config ---
  predict_node_types: true  # Enable node type prediction training
  node_loss_weight: 1.0     # Weight for node loss relative to edge loss (adjust as needed)
  # --- END ADDED ---

